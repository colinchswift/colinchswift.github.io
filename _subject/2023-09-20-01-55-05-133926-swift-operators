Arithmetic operators (+, -, *, /)
Assignment operators (=, +=, -=, *=, /=)
Comparison operators (==, !=, >, <, >=, <=)
Logical operators (&&, ||, !)
Range operators (a...b, a..<b)
IDENTITY operators (===, !==)
Nil Coalescing operator (a ?? b)
Compound assignment operators (+=, -=, *=, /=)
Bitwise AND operator (&)
Bitwise OR operator (|)
Bitwise XOR operator (^)
Bitwise NOT operator (~)
Left and right bitwise shift operators (<<, >>)
Overflow operators (&+, &-, &*)
Unary plus and minus operators (+, -)
Remainder operator (%)
Ternary conditional operator (a ? b : c)
Logical NOT operator (!)
Optional chaining operator (?.)
Forced unwrapping operator (!)
Dynamic Type Operator (is, as)
String concatenation operator (+)
String interpolation operator (\\())
Compound logical operators (a &&= b, a ||= b)
Compound bitwise operators (a &= b, a |= b, a ^= b)
For-In Loop operator (for item in array)
Half-closed range operator (..<)
Open range operator (...)
Pattern match operator (~=)
Identity operator (===, !==)
Bitwise shift assignment operators (<<=, >>=)
Logical AND assignment operator (&&=)
Logical OR assignment operator (||=)
Default assignment operator (?=)
Compound addition assignment operator (+=)
Compound subtraction assignment operator (-=)
Compound multiplication assignment operator (*=)
Compound division assignment operator (/=)
Compound remainder assignment operator (%=)
Compound bitwise AND assignment operator (&=)
Compound bitwise OR assignment operator (|=)
Compound bitwise exclusive OR assignment operator (^=)
Compound left bitwise shift assignment operator (<<=)
Compound right bitwise shift assignment operator (>>=)
Compound logical NOT assignment operator (!=)
Compound logical AND assignment operator (&&=)
Compound logical OR assignment operator (||=)
Bitwise right shift with sign extension operator (>>)
Explicitly unwrapped optional operator (!)
Optional try operator (try?, try!)
Increment (++) and decrement (--) operators
Bitwise left shift operator (<<)
Compound bitwise right shift assignment operator (>>=)
Compound logical XOR assignment operator (^=)
Compound right logical shift assignment operator (>>>=)
Compound left logical shift assignment operator (<<=)
Short-circuit evaluation operators (&&, ||)
Floating-point remainder operator (%)
Rest Operator (...)
Access control operators (private, fileprivate, internal, public, open)
Associativity operators (left, right, none)
Custom operators (prefix, infix, postfix)
Comparison operators for tuples (>, <, >=, <=)
Bitwise shift operators for signed integers (<<, >>)
Optional assignment operator (??=)
Compound remainder assignment operator (%=)
Stride-to operator (n.stride(to: m, by: k))
Stride-through operator (n.stride(through: m, by: k))
Compound bitwise shift assignment operator (<<=, >>=)
Attributed assignment operator (@=_attributed)
Compound logical NOT assignment operator (!=)
Compound right logical shift assignment operator (>>>=)
Compound left logical shift assignment operator (<<=)
Left unary operator (!a)
Right unary operator (a!)
Compound string concatenation assignment operator(+=)
Compound power assignment operator (**=)
Optional binding operator (if let, guard let)
Bitwise AND assignment operator (&=)
Bitwise OR assignment operator (|=)
Bitwise XOR assignment operator (^=)
Bitwise NOT assignment operator (~=)
Assignment by bitwise OR and assignment by bitwise XOR operator(|=, ^=)
Compound division assignment operator (/=)
Compound multiplication assignment operator(*)
Compound bitwise left shift assignment operator (<<=)
Compound bitwise AND assignment operator (&=)
Compound bitwise OR relationship operator (|=)
Compound bitwise XOR assignment operator (^=)
Compound right shift assignment operator (>>=)
Compound bitwise NOT assignment operator (~=)
Identity comparison operator (===, !==)
Bitwise NOT assignment operator (!=)
Left shift assignment operator (<<=)
Bitwise XOR relationship assignment operator (^=)
Right shift assignment operator (>>=)
Compound addition assignment operator (+=)
Compound subtraction assignment operator (-=)
Compound division assignment operator (/=)
Compound multiplication assignment operator (*=)